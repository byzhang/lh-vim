#summary Build Tools Wrapper -- a plugin to simplify the integration of compilation chains
#labels Featured

= Introduction =

BTW has two main purposes:
  * [BTW_filter To simplify the on-the-fly tuning of `'compiler'` settings.]
  * [BTW_make_run To offer a simplified interface to build, execute, test our programs.]

And it is also able to interface with [BTW_CMake projects under CMake].

= Download =

  * Requirements: Vim 7.+, [lhVimLib lh-vim-lib], [searchInRuntime], and [system-tools].
  * Checkout from the SVN repository
    {{{  
# Non-members may check out a read-only working copy anonymously over HTTP.
svn checkout http://lh-vim.googlecode.com/svn/BTW/trunk/ BTW-read-only
    }}}
  * Vim Addon Manager, install [http://code.google.com/p/lh-vim/source/browse/BTW/trunk/lh-build-tools-wrapper-addon-info.txt build-tools-wrapper]. This is the preferred method because of the various dependencies.

= See also = 

== Dependencies == 

You will most certainly require a project management plugin. I can offer you [local_vimrc], there are plenty alternatives (with similar names), or even the good old project.vim plugin.

== Examples of configuration of BTW ==

  * See the two `_local_vimrc*.vim` files from my [https://github.com/LucHermitte/Rasende Rasende Roboter solver].
  * See the two same files from my configuration for working with openjpeg _(link to be added)_.

== Alternatives ==
There are a few alternative plugins that I'm aware of:
  * [https://github.com/tpope/vim-dispatch Tim Pope's vim-dispatch] regarding the encapsulation of `:make`
  * Marc Weber's _name-forgotten_ plugin to run things in background
  * [http://jalcine.github.io/cmake.vim/ Jacky Alcin√©'s CMake.vim plugin]